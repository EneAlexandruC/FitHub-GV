// <auto-generated />
using FitHub.WorkoutManagement.Infrastructure.WorkoutDataAcces;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitHub.WorkoutManagement.Migrations
{
    [DbContext(typeof(WorkoutDbContext))]
    [Migration("20250430090746_UpdateWorkoutSeedData")]
    partial class UpdateWorkoutSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitHub.WorkoutManagement.Domain.EquipmentDomain.Equipment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("ID");

                    b.ToTable("Equipment", (string)null);
                });

            modelBuilder.Entity("FitHub.WorkoutManagement.Domain.ExerciseDomain.Exercise", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<string>("Equipment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Muscles")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("ID");

                    b.ToTable("Exercise", (string)null);
                });

            modelBuilder.Entity("FitHub.WorkoutManagement.Domain.JoinEntry.ExercisesEquipments", b =>
                {
                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.HasKey("ExerciseId", "EquipmentId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("ExerciseEquipment", (string)null);
                });

            modelBuilder.Entity("FitHub.WorkoutManagement.Domain.JoinEntry.WorkoutExercise", b =>
                {
                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.HasKey("WorkoutId", "ExerciseId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("WorkoutExercise", (string)null);
                });

            modelBuilder.Entity("FitHub.WorkoutManagement.Domain.WorkoutDomain.Workout", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CaloriesBurned")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Workout", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CaloriesBurned = "300-400",
                            Description = "A complete workout targeting all major muscle groups",
                            Difficulty = 1,
                            Duration = "45 minutes",
                            Image = "https://images.unsplash.com/photo-1534438327276-14e5300c3a48?q=80&w=1000",
                            Name = "Full Body Workout",
                            Type = 0
                        },
                        new
                        {
                            ID = 2,
                            CaloriesBurned = "400-500",
                            Description = "High-intensity interval training for maximum calorie burn",
                            Difficulty = 2,
                            Duration = "30 minutes",
                            Image = "https://images.unsplash.com/photo-1518611012118-696072aa579a?q=80&w=1000",
                            Name = "HIIT Cardio",
                            Type = 1
                        },
                        new
                        {
                            ID = 3,
                            CaloriesBurned = "200-300",
                            Description = "A calming yoga session focusing on flexibility and mindfulness",
                            Difficulty = 0,
                            Duration = "60 minutes",
                            Image = "https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?q=80&w=1000",
                            Name = "Yoga Flow",
                            Type = 2
                        },
                        new
                        {
                            ID = 4,
                            CaloriesBurned = "250-350",
                            Description = "Intense core workout to strengthen your abs and lower back",
                            Difficulty = 1,
                            Duration = "30 minutes",
                            Image = "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?q=80&w=1000",
                            Name = "Core Crusher",
                            Type = 0
                        },
                        new
                        {
                            ID = 5,
                            CaloriesBurned = "500-600",
                            Description = "High-intensity functional movements for overall fitness",
                            Difficulty = 3,
                            Duration = "45 minutes",
                            Image = "https://images.unsplash.com/photo-1533681902576-196966181a8a?q=80&w=1000",
                            Name = "CrossFit Challenge",
                            Type = 5
                        });
                });

            modelBuilder.Entity("FitHub.WorkoutManagement.Domain.JoinEntry.ExercisesEquipments", b =>
                {
                    b.HasOne("FitHub.WorkoutManagement.Domain.EquipmentDomain.Equipment", "Equipment")
                        .WithMany("ExercisesEquipments")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitHub.WorkoutManagement.Domain.ExerciseDomain.Exercise", "Exercise")
                        .WithMany("ExercisesEquipments")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("FitHub.WorkoutManagement.Domain.JoinEntry.WorkoutExercise", b =>
                {
                    b.HasOne("FitHub.WorkoutManagement.Domain.ExerciseDomain.Exercise", "Exercise")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitHub.WorkoutManagement.Domain.WorkoutDomain.Workout", "Workout")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("FitHub.WorkoutManagement.Domain.EquipmentDomain.Equipment", b =>
                {
                    b.Navigation("ExercisesEquipments");
                });

            modelBuilder.Entity("FitHub.WorkoutManagement.Domain.ExerciseDomain.Exercise", b =>
                {
                    b.Navigation("ExercisesEquipments");

                    b.Navigation("WorkoutExercises");
                });

            modelBuilder.Entity("FitHub.WorkoutManagement.Domain.WorkoutDomain.Workout", b =>
                {
                    b.Navigation("WorkoutExercises");
                });
#pragma warning restore 612, 618
        }
    }
}
