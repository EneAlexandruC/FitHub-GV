import React, { useState } from 'react';
import { Box, Button, Card, CardContent, Container, Divider, Grid, TextField, Typography } from '@mui/material';

const initialExercise = { name: '', sets: 3, reps: 10, description: '' };

const WorkoutBuilder: React.FC = () => {
  const [workoutName, setWorkoutName] = useState('');
  const [exercises, setExercises] = useState<{ name: string; sets: number; reps: number; description: string }[]>([]);
  const [exercise, setExercise] = useState(initialExercise);

  const handleAddExercise = () => {
    if (exercise.name.trim() !== '') {
      setExercises([...exercises, exercise]);
      setExercise(initialExercise);
    }
  };

  return (
    <Container maxWidth="md" sx={{ mt: 4 }}>
      <Typography variant="h5" gutterBottom>Creează Antrenament (local, fără backend)</Typography>
      <Box sx={{ mb: 3 }}>
        <TextField
          label="Nume antrenament"
          value={workoutName}
          onChange={(e: React.ChangeEvent<HTMLInputElement>) => setWorkoutName(e.target.value)}
          fullWidth
          margin="normal"
        />
        <Divider sx={{ my: 2 }} />
        <Typography variant="h6" gutterBottom>Exerciții</Typography>
        <Grid container spacing={2} alignItems="center">
          <Grid item xs={12} sm={3}>
            <TextField
              label="Nume exercițiu"
              value={exercise.name}
              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setExercise({ ...exercise, name: e.target.value })}
              fullWidth
            />
          </Grid>
          <Grid item xs={6} sm={2}>
            <TextField
              label="Seturi"
              type="number"
              value={exercise.sets}
              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setExercise({ ...exercise, sets: Number(e.target.value) })}
              fullWidth
            />
          </Grid>
          <Grid item xs={6} sm={2}>
            <TextField
              label="Repetări"
              type="number"
              value={exercise.reps}
              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setExercise({ ...exercise, reps: Number(e.target.value) })}
              fullWidth
            />
          </Grid>
          <Grid item xs={12} sm={4}>
            <TextField
              label="Descriere"
              value={exercise.description}
              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setExercise({ ...exercise, description: e.target.value })}
              fullWidth
            />
          </Grid>
          <Grid item xs={12} sm={1}>
            <Button variant="contained" color="primary" onClick={handleAddExercise} fullWidth>Adaugă</Button>
          </Grid>
        </Grid>
      </Box>
      <Divider sx={{ my: 2 }} />
      <Typography variant="h6" gutterBottom>Previzualizare Antrenament</Typography>
      <Card>
        <CardContent>
          <Typography variant="h6">{workoutName || 'Nume antrenament...'}</Typography>
          {exercises.length === 0 ? (
            <Typography variant="body2" color="text.secondary">Niciun exercițiu adăugat.</Typography>
          ) : (
            <ul style={{ marginTop: 8, marginBottom: 0, paddingLeft: 16 }}>
              {exercises.map((ex, idx) => (
                <li key={idx}>
                  {ex.name} ({ex.sets}x{ex.reps}){ex.description ? ` - ${ex.description}` : ''}
                </li>
              ))}
            </ul>
          )}
        </CardContent>
      </Card>
    </Container>
  );
};

export default WorkoutBuilder;
